import telebot
import os
import re
import logging
from telebot import types

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    filename='bot.log'
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—å—Å—è –∑—ñ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
API_TOKEN = os.getenv('API_TOKEN') 
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID', '452999752')

if not API_TOKEN:
    logger.error("–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ API_TOKEN! –ë–æ—Ç –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∏–π.")
    exit(1)

bot = telebot.TeleBot(API_TOKEN)
user_data = {}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def make_main_menu():
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn_product = types.KeyboardButton('üìã –ü—Ä–æ–¥—É–∫—Ü—ñ—è')
    btn_price = types.KeyboardButton('üí∞ –¶—ñ–Ω–∏')
    btn_delivery = types.KeyboardButton('üöö –î–æ—Å—Ç–∞–≤–∫–∞')
    btn_contacts = types.KeyboardButton('üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏')
    btn_order = types.KeyboardButton('üõí –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
    btn_location = types.KeyboardButton('üó∫Ô∏è –î–µ –º–∏ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—å')
    markup.add(btn_product, btn_price, btn_delivery, btn_contacts, btn_order, btn_location)
    return markup

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
def send_order_to_admin(chat_id):
    order = user_data[chat_id]
    order_text = f"""
üõí –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø!

üë§ –Ü–º'—è: {order['name']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order['phone']}
üì¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: {order['quantity']} —Ç
    
üí¨ –ß–∞—Ç ID: {chat_id}
    """
    try:
        bot.send_message(ADMIN_CHAT_ID, order_text)
        logger.info(f"–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ {chat_id} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

# ========== –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–í–Ü–î–û–ú–õ–ï–ù–¨ ==========

# –ö–æ–º–∞–Ω–¥–∏ /start —Ç–∞ /help
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    welcome_text = """
–í—ñ—Ç–∞—é! –Ø –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –∫–æ–º–ø–∞–Ω—ñ—ó –¢–ï–ö.
–ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏? –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—éüëá
    """
    bot.send_message(message.chat.id, welcome_text, reply_markup=make_main_menu())
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text in [
    'üìã –ü—Ä–æ–¥—É–∫—Ü—ñ—è', 'üí∞ –¶—ñ–Ω–∏', 'üöö –î–æ—Å—Ç–∞–≤–∫–∞', 
    'üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏', 'üó∫Ô∏è –î–µ –º–∏ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—å', 'üõí –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'
])
def handle_main_menu(message):
    if message.text == 'üìã –ü—Ä–æ–¥—É–∫—Ü—ñ—è':
        product_text = """
üü´ <b>–ù–∞—à—ñ —Ç–æ—Ä—Ñ'—è–Ω—ñ –ø–µ–ª–µ—Ç–∏</b>

<b>–û—Å–Ω–æ–≤–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏:</b>
‚Ä¢ –í–∏—Å–æ–∫–∞ —Ç–µ–ø–ª–æ—Ç–≤–æ—Ä–Ω—ñ—Å—Ç—å: –¥–æ 5 –∫–í—Ç/–∫–≥ (—è–∫ —É –≤—É–≥—ñ–ª–ª—è)
‚Ä¢ –ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –≤—ñ–¥ 4700 –∫–∫–∞–ª
‚Ä¢ –ù–∏–∑—å–∫–∞ –∑–æ–ª—å–Ω—ñ—Å—Ç—å: –º–µ–Ω—à–µ 10%
‚Ä¢ –ï–∫–æ–ª–æ–≥—ñ—á–Ω–µ –ø–∞–ª–∏–≤–æ
‚Ä¢ –í–∏—Å–æ–∫–∞ —â—ñ–ª—å–Ω—ñ—Å—Ç—å —Ç–∞ –Ω–∞–π–±—ñ–ª—å—à–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –≥–æ—Ä—ñ–Ω–Ω—è —Å–µ—Ä–µ–¥ –ø–µ–ª–ª–µ—Ç

<b>–§–∞—Å—É–≤–∞–Ω–Ω—è:</b>
‚Ä¢ –ë—ñ–≥-–±–µ–≥–∏ (–ø–æ 1000 –∫–≥)
‚Ä¢ –ù–∞–≤–∞–ª–æ–º

<b>–ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è:</b>
‚Ä¢ –ö–æ—Ç–ª–∏ –æ–ø–∞–ª–µ–Ω–Ω—è
‚Ä¢ –ö–∞–º—ñ–Ω–∏ —Ç–∞ –ø–µ—á—ñ
‚Ä¢ –ö–æ—Ç–µ–ª—å–Ω—ñ
‚Ä¢ –¢–≤–µ—Ä–¥–æ–ø–∞–ª–∏–≤–Ω—ñ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏
        """
        bot.send_message(message.chat.id, product_text, parse_mode='HTML')
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—Ä–æ–¥—É–∫—Ü—ñ—é")
    
    elif message.text == 'üí∞ –¶—ñ–Ω–∏':
        price_text = """
üíµ <b>–ê–∫—Ç—É–∞–ª—å–Ω—ñ —Ü—ñ–Ω–∏</b>

<b>–†–æ–∑–¥—Ä—ñ–±:</b>
‚Ä¢ –ë—ñ–≥ –ë–µ–≥ (1000 –∫–≥) ‚Äî <b>7000 –≥—Ä–Ω –∑ –ü–î–í</b>

<b>–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:</b>
‚Ä¢ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ

üí° <i>–ü—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥ 23 —Ç–æ–Ω–Ω ‚Äî –¥–æ–¥–∞—Ç–∫–æ–≤–∞ –∑–Ω–∏–∂–∫–∞!</i>
        """
        bot.send_message(message.chat.id, price_text, parse_mode='HTML')
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ —Ü—ñ–Ω–∏")
    
    elif message.text == 'üöö –î–æ—Å—Ç–∞–≤–∫–∞':
        delivery_text = """
üöõ <b>–£–º–æ–≤–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–∞ –æ–ø–ª–∞—Ç–∏</b>

<b>–†–µ–≥—ñ–æ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:</b>
‚Ä¢ –î–æ—Å—Ç–∞–≤–ª—è—î–º–æ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ (–æ–∫—Ä—ñ–º —Ç–∏–º—á–∞—Å–æ–≤–æ –æ–∫—É–ø–æ–≤–∞–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π)

<b>–°–ø–æ—Å–æ–±–∏ –æ–ø–ª–∞—Ç–∏:</b>
‚Ä¢ –ë–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ (–¥–ª—è –§–û–ü —Ç–∞ —é—Ä–∏–¥–∏—á–Ω–∏—Ö –æ—Å—ñ–±)
‚Ä¢ –ì–æ—Ç—ñ–≤–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —á–µ—Ä–µ–∑ –∫–∞—Å—Å—É

<b>–¢–µ—Ä–º—ñ–Ω–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b>
‚Ä¢ 1-2 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ –ø—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        """
        bot.send_message(message.chat.id, delivery_text, parse_mode='HTML')
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ —É–º–æ–≤–∏ –¥–æ—Å—Ç–∞–≤–∫–∏")
    
    elif message.text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏':
        contacts_text = """
üìû <b>–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏</b>

<b>–¢–µ–ª–µ—Ñ–æ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>
+38 (050) 444 61 62

<b>–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞:</b>
LLC.peatenergy@gmail.com

<b>–ê–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥—É:</b>
–†—ñ–≤–Ω–µ–Ω—Å—å–∫–∏–π —Ä–∞–π–æ–Ω, –ó–∞–±–æ—Ä–æ–ª—å –≤—É–ª. –ö–æ–ª–≥–æ—Å–ø–Ω–∞ 41–Ñ

<b>–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:</b>
–ü–Ω-–ü—Ç: 9:00-19:00
–°–±-–ù–¥: 11:00-19:00

üåê <b>–ù–∞—à —Å–∞–π—Ç:</b> www.peat-energy.com.ua
        """
        bot.send_message(message.chat.id, contacts_text, parse_mode='HTML')
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ –∫–æ–Ω—Ç–∞–∫—Ç–∏")
    
    elif message.text == 'üó∫Ô∏è –î–µ –º–∏ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—å':
        latitude = 50.70145383475299
        longitude = 26.354577705876483
        bot.send_location(message.chat.id, latitude, longitude)
        maps_text = """
üó∫Ô∏è <b>–ù–∞—à–µ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è:</b>

<b>–ê–¥—Ä–µ—Å–∞:</b>
–†—ñ–≤–Ω–µ–Ω—Å—å–∫–∏–π —Ä–∞–π–æ–Ω, –ó–∞–±–æ—Ä–æ–ª—å –≤—É–ª. –ö–æ–ª–≥–æ—Å–ø–Ω–∞ 41–Ñ

<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Maps:</b>
https://maps.app.goo.gl/?q=50.70145383475299,26.354577705876483

<b>–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:</b>
–ü–Ω-–ü—Ç: 9:00-19:00
–°–±-–ù–¥: 11:00-19:00
        """
        bot.send_message(message.chat.id, maps_text, parse_mode='HTML')
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ –ª–æ–∫–∞—Ü—ñ—é")
    
    elif message.text == 'üõí –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è':
        chat_id = message.chat.id
        user_data[chat_id] = {'step': 'name'}
        bot.send_message(chat_id, "‚úèÔ∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –ø–æ—á–∞–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ
@bot.message_handler(func=lambda message: message.chat.id in user_data and user_data[message.chat.id]['step'] == 'name')
def get_name(message):
    chat_id = message.chat.id
    user_data[chat_id]['name'] = message.text
    user_data[chat_id]['step'] = 'phone'
    
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    reg_button = types.KeyboardButton(text="üìû –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)
    keyboard.add(reg_button)
    
    bot.send_message(chat_id, "üìû –¢–µ–ø–µ—Ä –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:", reply_markup=keyboard)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –≤–≤—ñ–≤ —ñ–º'—è: {message.text}")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
@bot.message_handler(content_types=['contact'])
def get_contact(message):
    chat_id = message.chat.id
    if chat_id in user_data and user_data[chat_id]['step'] == 'phone':
        user_data[chat_id]['phone'] = message.contact.phone_number
        user_data[chat_id]['step'] = 'quantity'
        bot.send_message(chat_id, "‚úÖ –î—è–∫—É—é! –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü—ñ—ó (—É —Ç–æ–Ω–∞—Ö):", reply_markup=make_main_menu())
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –Ω–∞–¥–∞–≤ –∫–æ–Ω—Ç–∞–∫—Ç: {message.contact.phone_number}")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É —è–∫ —Ç–µ–∫—Å—Ç—É (–í–ò–ü–†–ê–í–õ–ï–ù–û!)
@bot.message_handler(func=lambda message: message.chat.id in user_data 
                     and user_data[message.chat.id]['step'] == 'phone' 
                     and message.text  # –î–æ–¥–∞–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ —Ü–µ —Ç–µ–∫—Å—Ç–æ–≤–∏–π message
                     and not message.text.startswith('/'))  # –Ü–≥–Ω–æ—Ä—É—î–º–æ –∫–æ–º–∞–Ω–¥–∏
def get_phone_text(message):
    chat_id = message.chat.id
    phone_pattern = r'^(\+?\d{1,3})?[-.\s]?\(?\d{1,4}\)?[-.\s]?\d{1,4}[-.\s]?\d{1,9}$'
    if re.match(phone_pattern, message.text):
        user_data[chat_id]['phone'] = message.text
        user_data[chat_id]['step'] = 'quantity'
        bot.send_message(chat_id, "‚úÖ –î—è–∫—É—é! –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ü—ñ—ó (—É —Ç–æ–Ω–∞—Ö):", reply_markup=make_main_menu())
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –≤–≤—ñ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω: {message.text}")
    else:
        bot.send_message(chat_id, "‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–Ω–æ–ø–∫–æ—é '–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º':")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
@bot.message_handler(func=lambda message: message.chat.id in user_data and user_data[message.chat.id]['step'] == 'quantity')
def get_quantity(message):
    chat_id = message.chat.id
    try:
        quantity = float(message.text.replace(',', '.'))  
        user_data[chat_id]['quantity'] = quantity
        send_order_to_admin(chat_id)
        bot.send_message(chat_id, "‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.", reply_markup=make_main_menu())
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} –∑–∞–º–æ–≤–∏–≤ {quantity} —Ç–æ–Ω–Ω")
        del user_data[chat_id]
    except ValueError:
        bot.send_message(chat_id, "‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 1.5 –∞–±–æ 2:")

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
@bot.message_handler(func=lambda message: message.text.lower() in ['—Å–∫–∞—Å—É–≤–∞—Ç–∏', '/cancel', '–≤—ñ–¥–º—ñ–Ω–∞', '–≤—ñ–¥–º—ñ–Ω–∏—Ç–∏'])
def cancel_order(message):
    chat_id = message.chat.id
    if chat_id in user_data:
        del user_data[chat_id]
        bot.send_message(chat_id, "‚ùå –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=make_main_menu())
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.chat.id} —Å–∫–∞—Å—É–≤–∞–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")

# –û–±—Ä–æ–±–Ω–∏–∫ –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, —â–æ –Ω–µ —î –∫–æ–º–∞–Ω–¥–∞–º–∏)
@bot.message_handler(func=lambda message: message.text and not message.text.startswith('/'))
def echo_all(message):
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é üëá", reply_markup=make_main_menu())

if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —ñ —á–µ–∫–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
    
    try:
        bot.infinity_polling(timeout=60, long_polling_timeout=60)
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤ —Ä–æ–±–æ—Ç—ñ –±–æ—Ç–∞: {e}")
        print(f"–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")